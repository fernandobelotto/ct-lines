#!/usr/bin/env bun
import * as fs from 'fs/promises';
import * as path from 'path';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);

async function build() {
    try {
        // Create dist directory if it doesn't exist
        await fs.mkdir('dist', { recursive: true });

        // Compile TypeScript files
        console.log('Compiling TypeScript files...');
        await execAsync('bun build ./src/index.ts --outdir ./dist --target node');

        // Make the output file executable
        await fs.chmod(path.join('dist', 'index.js'), 0o755);

        // Create example output directory
        const exampleDir = path.join('dist', 'example');
        await fs.mkdir(exampleDir, { recursive: true });

        // Create example files
        await fs.writeFile(path.join(exampleDir, 'README.md'), `# Example Output Directory

This directory contains example output files generated by the count-lines tool:

- results.json: Raw data in JSON format
- results.txt: Human-readable text format
- results.csv: CSV format for spreadsheet applications
- results.md: Summary in markdown format
- details.md: Detailed breakdown by language in markdown format
`);

        console.log('Build completed successfully!');
    } catch (error) {
        console.error('Build failed:', error);
        process.exit(1);
    }
}

build(); 